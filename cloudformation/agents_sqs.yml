---
AWSTemplateFormatVersion: "2010-09-09"
Description: Titan Agents SQS

Parameters:
  queueName:
    Type: String
    Description: Name of the SQS
  lambdaSqsName:
    Type: String
    Description: Name of the Lambda function
  lambdaBucket:
    Type: String
    Description: S3 bucket name for Lambda code
  lambdaKey:
    Type: String
    Description: S3 key for Lambda code
  webSocketConnectionsUrl:
    Type: String
    Description: Websocket URL

Resources:
  sqs:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${queueName}.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      KmsMasterKeyId: alias/aws/sqs
      VisibilityTimeout: 30
      MessageRetentionPeriod: 86400
      ReceiveMessageWaitTimeSeconds: 1
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt sqsDlq.Arn
        maxReceiveCount: 5

  sqsDlq:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${queueName}-DLQ.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      KmsMasterKeyId: alias/aws/sqs
      VisibilityTimeout: 120
      MessageRetentionPeriod: 86400

  lambdaSqsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: lambda-sqs-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource: !GetAtt sqs.Arn
              - Effect: Allow
                Action:
                  - execute-api:ManageConnections
                  - execute-api:Invoke
                Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/@connections/*

  lambdaSqsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${lambdaSqsName}

  lambdaSqs:
    DependsOn:
      - lambdaSqsLogGroup
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref lambdaSqsName
      Description: Titan Agent SQS to Websocket Message
      Handler: sqs.lambda_handler
      Runtime: python3.12
      Role: !GetAtt lambdaSqsExecutionRole.Arn
      MemorySize: 128
      Timeout: 300
      Code:
        S3Bucket: !Ref lambdaBucket
        S3Key: !Ref lambdaKey
      Environment:
        Variables:
          SQS_URL: !GetAtt sqs.Arn
          SQS_DLQ_URL: !GetAtt sqsDlq.Arn
          WEBSOCKET_CONNECTIONS_URL: !Ref webSocketConnectionsUrl

  lambdaSqsTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !Ref lambdaSqs
      EventSourceArn: !GetAtt sqs.Arn
      Enabled: true
      BatchSize: 1
